<?xml version="1.0" encoding="UTF-8"?><RuntimeErrorAnalysis><AuthorAffiliation>Community</AuthorAffiliation><Summary>DataAccessException</Summary><SampleLogOutput><![CDATA[DataAccessException]]></SampleLogOutput><RegExpPattern><![CDATA[DataAccessException]]></RegExpPattern><ProblemDetailHtml><![CDATA[Root of the hierarchy of data access exceptions discussed in
 <a href="http://www.amazon.com/exec/obidos/tg/detail/-/0764543857/">Expert One-On-One J2EE Design and Development</a>.
 Please see Chapter 9 of this book for detailed discussion of the
 motivation for this package.

 <p>This exception hierarchy aims to let user code find and handle the
 kind of error encountered without knowing the details of the particular
 data access API in use (e.g. JDBC). Thus it is possible to react to an
 optimistic locking failure without knowing that JDBC is being used.

 <p>As this class is a runtime exception, there is no need for user code
 to catch it or subclasses if any error is to be considered fatal
 (the usual case).]]></ProblemDetailHtml><SolutionDetailHtml><![CDATA[Common solutions for this exception have not yet been submitted.]]></SolutionDetailHtml><AdditionalResourcesDetailHtml></AdditionalResourcesDetailHtml></RuntimeErrorAnalysis>